<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.2//EN" "http://apache.org/forrest/ttd/document-v12.ttd">
<document>
	<header>
		<title>IKVM.NET Virtual Machine (ikvm.exe)</title>
		<abstract>The ikvm tool is a Java virtual machine implemented in .NET.</abstract>
	</header>
	<body>
		<section>
			<title>Usage</title>
<table><tr><td>
			<p xml:space="preserve">    ikvm [ <em>options</em> ] <em>classname</em> [ <em>args ...</em> ]</p>
			<p xml:space="preserve">    ikvm [ <em>options</em> ] -jar <em>jarfile</em> [ <em>args ...</em> ]</p>
</td></tr></table>				
			<dl>
				<dt>options</dt>
				<dd>Command-line options for the virtual machine.</dd>
				<dt>classname</dt>
				<dd>Fully-qualified name of a class containing the main method to execute. Do not include a
				path or a .class extension. Do not use this with the -jar option.</dd>
				<dt>jarfile</dt>
				<dd>The name of an executable .jar file to execute. Used only with the -jar option.</dd>
				<dt>args</dt>
				<dd>Command-line arguments passed to the main class.</dd>
			</dl>
		</section>

		<section>
			<title>Options</title>
			<table>
				<tr>
					<th>Option</th>
					<th>Description</th>
				</tr>
				<tr>
					<td>
						-cp&nbsp;<em>classpath</em>	<br />
						-classpath&nbsp;<em>classpath</em>
					</td>
					<td><p>Specifies the classpath for the JVM. <em>classpath</em> is a semicolon-delimited list of pathnames to directories and zip files / jar files.</p>
                                                          <p>Note: If you specify this option more than once, only the last is used.</p>
                                                 </td>
				</tr>
				<tr>
					<td>
						-D<em>property-name</em>=<em>value</em>
					</td>
					<td>
						Set a system property named <em>property-name</em> to <em>value</em>. Note that there is no
						space between the -D and <em>property-name</em>.
					</td>
				</tr>
				<tr>
					<td>
						-Xsave            
					</td>
					<td>
						Saves the generated assembly (for debugging)
					</td>
				</tr>
				<tr>
					<td>
						-Xtime            
					</td>
					<td>
						Times the execution
					</td>
				</tr>
				<tr>
					<td>
						-Xbootclasspath:<em>classpath</em>            
					</td>
					<td>
						<p>Specifies the boot classpath for the JVM. <em>classpath</em> is a semicolon-delimited list of pathnames to directories and jars.
						These classes override those in the GNU Classpath libraries.</p>
                                                            <p>Note: If you specify this option more than once, only the last is used.</p>
					</td>
				</tr>
				<tr>
					<td>
						-Xtrace:<em>name</em>              
					</td>
					<td>
						Displays all tracepoints with the given name
					</td>
				</tr>
				<tr>
					<td>
						 -Xmethodtrace:<em>name</em>               
					</td>
					<td>
						Builds method trace into the specified output method 
					</td>
				</tr>
				<tr>
					<td>
						-Xwait              
					</td>
					<td>
						Keeps process hanging around after exit
					</td>
				</tr>
			</table>
		</section>
		<section>
			<title>Notes</title>
			<p>This command is intended to act as a "drop-in" replacement for the Sun / IBM JVM's. In many cases,
			you can take a java command line and simply replace <em>java</em> with <em>ikvm</em>.</p>
						
			<p>Please refer to the <jump href="http://java.sun.com/j2se/1.4.2/docs/tooldocs/windows/java.html">Sun documentation</jump>
			for usage details. Note that ikvm supports only the options listed here.</p>
			
                              <p>ikvm finds classes as follows:</p>
                              <ul>
                                <li>If no -cp/-classpath or -jar option specified, and no CLASSPATH environment variable is set,
                                looks in the current directory.</li>
                                <li>If no -cp/-classpath or -jar option specified, and CLASSPATH environment variable is set,
                                looks in directories specified in CLASSPATH (not in the current directory unless CLASSPATH contains .).</li>
                                <li>If -cp/-classpath option specified, ignores CLASSPATH environment variable, and looks only in
                                directories specified in -cp/-classpath option.</li>
                                <li>If -jar option specified, prepends jarfile to CLASSPATH (or -cp/-classpath specified classpath).
                                <p><strong>Note:</strong> This is different from the Sun JVM behavior.</p>
                                </li>
                              </ul>
                        
			<p>For information about creating executable jar files, see <jump href="http://www-106.ibm.com/developerworks/library/j-jar/">this IBM article</jump>.</p>
			
			
		</section>
		
		<section>
			<title>Examples</title>
			<p xml:space="preserve"><code>    ikvm MyProg </code></p>
			<p>Loads a class named MyProg.class from the current directory (unless the CLASSPATH environment variable
			is set, in which case that is searched instead) and executes its main method. 
			</p>

			<p xml:space="preserve"><code>    ikvm -cp c:\java\lib;c:\mystuff\mylib.jar;c:\mystuff\otherlib.zip org.me.MyProg </code></p>
			<p>Loads a class named org.me.MyProg from a file named MyProg.class and executes its main method. Searches for it in the following locations:</p>
			<ul>
			<li>c:\java\lib\org\me\MyProg.class</li>
			<li>c:\mystuff\mylib.jar (looks inside for org/me/MyProg.class)</li>
			<li>c:\mystuff\otherlib.zip (looks inside for org/me/MyProg.class)</li>
			</ul>

			<p xml:space="preserve"><code>    ikvm -jar /usr/share/myprog.jar </code></p>
			<p>Executes Java code in the executable jar file /usr/share/myprog.jar.</p> 
		</section>
	</body>
</document>
